
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author louienicholaslee, International School Manila 13-inch
 * MacBook Pro, NetBeans, To help facilitate learning of new vocabulary in
 * foreign languages
 * 
 * Allows user to edit/add words to the set
 */
public class AddWordForm extends javax.swing.JDialog {
    //Declaration WordWPron/WorWOPron to send back to the edistSetForm
    private WordWPron wp;
    private WordWOPron wop;
    private boolean phoneticLanguage;

    /**
     * Creates new form AddWord constructor for just adding a word
     */
    public AddWordForm(java.awt.Dialog parent, boolean modal, boolean phoneticLanguage) {
        super(parent, modal);
        initComponents();
        this.phoneticLanguage = phoneticLanguage;
        if (!phoneticLanguage) {
            //sets the pronunciation field uneditable if the language is not phonetic based
            Pronunciation.setEditable(false);
        }
        //shows a reminder to the user that there is a limit to the image size
        JOptionPane.showMessageDialog(null, "Reminder: the maximum image size you"
                + " the program can accommodate is 500 by 500 pixels");
    }

    //Mastery Factor: Polymorphism
    //Constructor for editing a word which passes a parameter WordWPron
    public AddWordForm(java.awt.Dialog parent, boolean modal, WordWPron word, boolean phoneticLanguage) {
        super(parent, modal);
        initComponents();
        wp = word;
        this.phoneticLanguage = phoneticLanguage;
        //Enters the fields with the current properties of the word
        Word.setText(word.getWord());
        Meaning.setText(word.getMeaning());
        Example.setText(word.getExample());
        ImgName.setText(word.getImgName());
        Pronunciation.setText(word.getPronunciation());
        //Shows a reminder to the user that there is a limit to the image size
        JOptionPane.showMessageDialog(null, "Reminder: the maximum image size you"
                + " the program can accommodate is 500 by 500 pixels");
    }

    public AddWordForm(java.awt.Dialog parent, boolean modal, WordWOPron word, boolean phoneticLanguage) {
        super(parent, modal);
        initComponents();
        wop = word;
        this.phoneticLanguage = phoneticLanguage;
        //Enters the fields with the current properties of the word
        Word.setText(word.getWord());
        Meaning.setText(word.getMeaning());
        Example.setText(word.getExample());
        ImgName.setText(word.getImgName());
        //Sets the pronunciation uneditable if the because it is not applicable
        Pronunciation.setEditable(false);
        //Shows a reminder to the user that there is a limit to the image size
        JOptionPane.showMessageDialog(null, "Reminder: the maximum image size you"
                + " the program can accommodate is 500 by 500 pixels");

    }

    //Accessor method that returns the proper word subclass based on whether or 
    //not the language is phonetic
    public Word getWord() {
        if (phoneticLanguage) {
            return wp;
        } else {
            return wop;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Word = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Meaning = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Pronunciation = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Example = new javax.swing.JTextField();
        ImgName = new javax.swing.JTextField();
        Enter = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setText("English Word");

        jTextField4.setText("jTextField1");

        jLabel5.setText("Translated Word");

        jTextField5.setText("jTextField2");

        jLabel6.setText("Pronunciation");

        jTextField6.setText("jTextField3");

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jDialog1Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField4))
                    .add(jDialog1Layout.createSequentialGroup()
                        .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jDialog1Layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jDialog1Layout.createSequentialGroup()
                                .add(jLabel6)
                                .add(40, 40, 40)
                                .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 177, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Word");

        Word.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WordActionPerformed(evt);
            }
        });

        jLabel2.setText("Meaning");

        jLabel3.setText("Pronunciation");

        jLabel7.setText("Example");

        jLabel8.setText("Image Name");

        Enter.setText("Enter");
        Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel1)
                    .add(jLabel7)
                    .add(jLabel8))
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Word, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 268, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Meaning, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 268, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Example, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ImgName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 0, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3)
                        .add(18, 18, 18)
                        .add(Pronunciation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 268, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(133, 133, 133)
                        .add(Enter)
                        .add(39, 39, 39)
                        .add(Cancel)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {Example, ImgName, Meaning, Pronunciation, Word}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.linkSize(new java.awt.Component[] {Cancel, Enter}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(Word, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Meaning, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(Example, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(ImgName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Pronunciation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(1, 1, 1)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Enter)
                    .add(Cancel))
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterActionPerformed
        int imgNameLength = ImgName.getText().trim().length();
        //Prevention of the different possibilities of error by showing messages to user
        //Mastery Factor: Complex Selection
        if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning,"
                    + " Pronunciation (optional), Example, and Image Name");
        } else if ("".equals(Word.getText()) && "".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning, Example, and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning,"
                    + " Pronunciation (optional), and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(Example.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning, and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning,"
                    + " Pronunciation (optional) and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning, and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Pronunciation (optional),"
                    + " Example, and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Example, and Image Name");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning, Pronunciation (optional),"
                    + " Example, and Image Name");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning, Example, and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning, and Pronunciation (optional)");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Meaning");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Pronunciation (optional), and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Example");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning, Pronunciation (optional), and Example");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(Example.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Pronunciation (optional), and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Example.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Example");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Meaning, and Pronunciation (optional)");
        } else if ("".equals(Word.getText()) 
                && "".equals(Meaning.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Meaning");
        } else if ("".equals(Word.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word, Pronunciation (optional), and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Image Name");
        } else if ("".equals(Meaning.getText())
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning, Pronunciation (optional), and Image Name");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning and Image Name");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning, and Image Name");
        } else if ("".equals(Example.getText()) 
                && "".equals(ImgName.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Example and Image Name");
        } else if ("".equals(Example.getText()) 
                && "".equals(ImgName.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Pronunciation (optional), Example, and Image Name");
        } else if ("".equals(Word.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Word and Pronunciation (optional)");
        } else if ("".equals(Word.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "Please enter the word");
        } else if ("".equals(Meaning.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Meaning and Pronunciation (optional)");
        } else if ("".equals(Meaning.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "Please enter the meaning of the word");
        } else if ("".equals(Example.getText()) 
                && "".equals(Pronunciation.getText())) {
            JOptionPane.showMessageDialog(null, 
                    "You have not filled in the proper fields: Pronunciation (optional) and Example");
        } else if ("".equals(Example.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter an example usage of the word");
            //Prevents user from entering an image file name that is not currently 
            //in the imageDirectory
        } else if (this.getClass().getResource("/ImageDirectory/" + ImgName.getText()) == null) {
            JOptionPane.showMessageDialog(null, "Please enter a valid image file name. "
                    + "Note: you must first enter image file to the ImageDirectory folder");
            //Forces user to print image of type jpeg, jpg or gif
        } else if (!ImgName.getText().trim().substring(imgNameLength- 3, imgNameLength).equalsIgnoreCase("jpg")
                && !ImgName.getText().trim().substring(imgNameLength- 3, imgNameLength).equalsIgnoreCase("gif")
                && !ImgName.getText().trim().substring(imgNameLength- 4, imgNameLength).equalsIgnoreCase("jpeg")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid image file name."
                    + " Note: the picture must be of file type .jpg, .jpeg, or .gif");
        } else {
            //Creates instantiates the correct word subclass
            if (phoneticLanguage) {
                //Prevents user from only entering spaces in the fields
                if (Word.getText().trim().length() == 0 
                        || Meaning.getText().trim().length() == 0 
                        || Pronunciation.getText().trim().length() == 0 
                        || Example.getText().trim().length() == 0 
                        || ImgName.getText().trim().length() == 0) {
                    JOptionPane.showMessageDialog(null, "At least one of the fields contain only spaces");
                } else {
                    wp = new WordWPron(Word.getText().trim(), Meaning.getText().trim(),
                            Example.getText().trim(), ImgName.getText().trim(), Pronunciation.getText().trim());
                    this.dispose();
                }
            } else {
                //Prevents user from only entering spaces in the fields
                if (Word.getText().trim().length() == 0 
                        || Meaning.getText().trim().length() == 0 
                        || Example.getText().trim().length() == 0 
                        || ImgName.getText().trim().length() == 0) {
                    JOptionPane.showMessageDialog(null, "At least one of the fields contain only spaces");
                } else {
                    wop = new WordWOPron(Word.getText().trim(), Meaning.getText().trim(),
                            Example.getText().trim(), ImgName.getText().trim());
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_EnterActionPerformed
    //Closes the form
    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelActionPerformed

    private void WordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WordActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Enter;
    private javax.swing.JTextField Example;
    private javax.swing.JTextField ImgName;
    private javax.swing.JTextField Meaning;
    private javax.swing.JTextField Pronunciation;
    private javax.swing.JTextField Word;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
